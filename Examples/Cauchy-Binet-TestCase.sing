LIB "Vinay.lib";
LIB "control.lib";


ring R = 0,(x,y),dp;
matrix m[3][2];


//  4/125,  -64/5*x+384/25*y+2152/125,      8/25*y+4/125,    
// -21/250,168/5*x-1008/25*y-5524/125,     -21/25*y-21/250, 
// 504/125,-8064/5*x+48384/25*y+271152/125,1008/25*y+629/125

m = -64/5*x+384/25*y+2152/125,      8/25*y+4/125,
    168/5*x-1008/25*y-5524/125,     -21/25*y-21/250, 
    -8064/5*x+48384/25*y+271152/125,1008/25*y+629/125;

matrix tmpA[3][3];
matrix tmpB[3][3];
tmpA = 1,sparsepoly(5),sparsepoly(5),
    0,1,sparsepoly(5),
    0,0,1;
tmpB = 1,0,0,
    sparsepoly(5),1,0,
    sparsepoly(5),sparsepoly(5),1;
m=tmpA*tmpB;
m = submat(m,1..3,1..2);
print(m);

"size of m = "+size_Matrix(m);
"------";


matrix ltInv[2][3] = leftInverse(m);
matrix CBRow[1][nrows(m)] = CauchyBinetRow(m);
matrix B[nrows(m)][nrows(m)] = transpose((concat(transpose(ltInv),transpose(CBRow))));

///////////////////////////////////////
// Given a (column) unimodular matrix A, this first computes the left inverse
// of A, then completes it to a square matrix and then right inverse of
// this is precisely the column completion of A.
///////////////////////////////////////
matrix uni_completion = rightInverse(B);

print(uni_completion);
"size of uni_completion = "+size_Matrix(uni_completion);
"";
"Determinent  = "+string(det(uni_completion));

